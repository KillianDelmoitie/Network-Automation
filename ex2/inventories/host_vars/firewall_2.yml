ansible_host: 192.168.1.99 
ansible_user: "admin" 
ansible_password: "finalwork" 

#Configure hostname
# hostname: NAME
hostname: FG_FIREWALL_2

#Configure Static routes
# ip_route:
#   - gateway: "IP"
#     dest_addr: "IP/MASK"
#     distance: INTEGER
#     interface: "INTERFACE"

ip_route:
  - gateway: "0.0.0.0"
    dest_addr: "0.0.0.0/0"
    distance: 10
    interface: "wan1"
  - gateway: "0.0.0.0"
    dest_addr: "172.16.10.0/24"
    distance: 5
    interface: "VPN-TUNNEL"
  - gateway: "0.0.0.0"
    dest_addr: "172.16.9.0/24"
    distance: 5
    interface: "VPN-TUNNEL"

#interface configuration, assign an IP and create an allowlist
# interfaces:
#   - name: INTERFACE
#     ip_mask: "IP/MASK"
#     allowaccess_list: 
#     - "protocol (lowercase)" 
#     - "ping"

interfaces:
  - name: wan1
    ip_mask: "193.190.200.6/30"
    allowaccess_list: 
    - "https" 
    - "ping"
    - "http"
    - "ssh"
    - "http"

#IPsec phase 1 configuration
# ipsec_ph1:
#   - name: "VPN NAME"
#     remote_gw: "GW IP"
#     psk_secret: "PSK PASSWORD"

ipsec_ph1:
  - name: "VPN-TUNNEL"
    remote_gw: "193.190.200.1"
    psk_secret: "ExamenNetworkSecurity"

#Configure the local and remote addresses (phase 2)
# ipsec_ph2:
#   - nameph1: "NAME PH1 TUNNEL"
#     name: "NAME of PH2"
#     local_addr: "IP/MASK"
#     remote_addr: "IP/MASK"

ipsec_ph2:
  - nameph1: "VPN-TUNNEL"
    name: "VLAN 11-9"
    local_addr: "172.16.11.0/24"
    remote_addr: "172.16.9.0/24"
  - nameph1: "VPN-TUNNEL"
    name: "VLAN 11-10"
    local_addr: "172.16.11.0/24"
    remote_addr: "172.16.10.0/24"

#Create VLANS with allow_list
# vlans:
#   - interface: INTERFACE
#     id: VLAN_ID
#     name: VLAN_NAME
#     ip: "IP" 
#     subnet: "SUBNET"
#     allowaccess_list: 
#     - "protocol (lowercase)" 

vlans:
  - interface: internal2
    id: 11
    name: VLAN11
    ip: "172.16.11.1"
    subnet: "255.255.255.0"
    allowaccess_list: 
    - "https" 
    - "ping"
    - "ssh"
    - "http"
  - interface: internal2
    id: 12
    name: VLAN12
    ip: "172.16.12.1"
    subnet: "255.255.255.0"
    allowaccess_list: 
    - "https" 
    - "ping"
    - "ssh"
    - "http"
  - interface: internal2
    id: 99
    name: VLAN99
    ip: "192.168.99.1"
    subnet: "255.255.255.0"
    allowaccess_list: 
    - "https" 
    - "ping"
    - "ssh"
    - "http"

#Create additional address objects
# addr_obj:
#   - name: "NAME ADDRESS"
#     subnet: "IP/MASK"

addr_obj:
  - name: "VLAN9 address"
    subnet: "172.16.9.0/24"
  - name: "VLAN10 address"
    subnet: "172.16.10.0/24"

#Create DPCH servers of certain interfaces
# dhcp_server:
#   - id: INTEGER 
#     interface: INTERFACE
#     default_gateway: "IP"
#     dhcp_id: INTEGER
#     start_ip: "start_ip"
#     end_ip: "end_ip"

dhcp_server:
  - id: 1
    interface: internal
    default_gateway: "192.168.1.99"
    netmask: "255.255.255.0"
    dhcp_id: 1
    start_ip: "192.168.1.110"
    end_ip: "192.168.1.210"
  - id: 2
    interface: VLAN11
    default_gateway: "172.16.11.1"
    netmask: "255.255.255.0"
    dhcp_id: 2
    start_ip: "172.16.11.2"
    end_ip: "172.16.11.254"
  - id: 3
    interface: VLAN12
    default_gateway: "172.16.12.1"
    netmask: "255.255.255.0"
    dhcp_id: 3
    start_ip: "172.16.12.2"
    end_ip: "172.16.12.254"

#Create policys
# policy:
#   - id: INTEGER
#     action: "accept/deny"
#     name: "NAME POLICY"
#     nat: disable/enable
#     src_inter: "SOURCE INTERFACe"
#     dest_inter: "DESTINATION INTERFACE"
#     src_addr: 
#     - "Source Address Object"
#     dest_addr: 
#     - "Destination Address Object"
#     services: 
#     - "PROTOCOL (CAPITAL)"

policy:
  - id: 11
    action: "accept"
    name: "VLAN 99->VLAN11"
    nat: disable
    src_inter: "VLAN99"
    dest_inter: "VLAN11"
    src_addr: 
    - "VLAN99 address"
    dest_addr: 
    - "VLAN11 address"
    services: 
    - "SSH"
  - id: 12
    action: "accept"
    name: "VLAN 11->VLAN99"
    nat: disable
    src_inter: "VLAN11"
    dest_inter: "VLAN99"
    src_addr: 
    - "VLAN11 address"
    dest_addr: 
    - "VLAN99 address"
    services: 
    - "SSH"
  - id: 13
    action: "accept"
    name: "VLAN 11->VLAN12"
    nat: disable
    src_inter: "VLAN11"
    dest_inter: "VLAN12"
    src_addr: 
    - "VLAN11 address"
    dest_addr: 
    - "VLAN12 address"
    services: 
    - "ALL"
  - id: 14
    action: "accept"
    name: "VLAN 12->VLAN11"
    nat: disable
    src_inter: "VLAN12"
    dest_inter: "VLAN11"
    src_addr: 
    - "VLAN12 address"
    dest_addr: 
    - "VLAN11 address"
    services: 
    - "ALL"
  - id: 15
    action: "accept"
    name: "internal->WAN"
    nat: enable
    src_inter: "internal"
    dest_inter: "wan1"
    src_addr: 
    - "internal"
    dest_addr: 
    - "all"
    services: 
    - "ALL"
  - id: 16
    action: "accept"
    name: "VLAN11->TUNNEL"
    nat: disable
    src_inter: "VLAN11"
    dest_inter: "VPN-TUNNEL"
    src_addr:
    - "VLAN11 address" 
    dest_addr:
    - "VLAN9 address"
    - "VLAN10 address"
    services: 
    - "ALL_ICMP"
    - "RDP"
    - "SSH"
    - "SMB"
  - id: 17
    action: "accept"
    name: "TUNNEL->VLAN11"
    nat: disable
    src_inter: "VPN-TUNNEL"
    dest_inter: "VLAN11"
    src_addr: 
    - "VLAN9 address"
    - "VLAN10 address"
    dest_addr:
    - "VLAN11 address"
    services: 
    - "ALL_ICMP"
    - "RDP"
    - "SSH"
    - "SMB"
  - id: 18
    action: "accept"
    name: "VLAN 12->WAN"
    nat: disable
    src_inter: "VLAN12"
    dest_inter: "wan1"
    src_addr: 
    - "VLAN12 address"
    dest_addr: 
    - "all"
    services: 
    - "ALL"

#To configure an SSL_VPN 
# SSL_VPN: true